{"ast":null,"code":"var _jsxFileName = \"C:\\\\Meu_Portifolio\\\\Portifolio_Front_end\\\\src\\\\components\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]); // Estado para armazenar os projetos\n  const [loading, setLoading] = useState(true); // Estado para indicar que os dados estão carregando\n\n  // Função para buscar os projetos da API\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/projects/').then(response => response.json()) // Converte a resposta para JSON\n    .then(data => {\n      setProjects(data); // Armazena os projetos no estado\n      setLoading(false); // Define o loading como false depois de carregar os dados\n    }).catch(error => {\n      console.error('Erro ao carregar os projetos:', error);\n      setLoading(false); // Se houver erro, também define o loading como false\n    });\n  }, []); // O array vazio indica que a função será chamada apenas uma vez quando o componente for montado\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando projetos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this); // Exibe \"Carregando...\" enquanto os dados não chegam\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    className: \"projects container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"neon-title\",\n      children: \"Projetos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Ver Projeto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","map","project","title","description","href","url","target","rel","_c","$RefreshReg$"],"sources":["C:/Meu_Portifolio/Portifolio_Front_end/src/components/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Projects = () => {\r\n\r\n\r\n  const [projects, setProjects] = useState([]);  // Estado para armazenar os projetos\r\n  const [loading, setLoading] = useState(true);   // Estado para indicar que os dados estão carregando\r\n\r\n  // Função para buscar os projetos da API\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:8000/api/projects/')\r\n      .then(response => response.json())  // Converte a resposta para JSON\r\n      .then(data => {\r\n        setProjects(data);  // Armazena os projetos no estado\r\n        setLoading(false);  // Define o loading como false depois de carregar os dados\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao carregar os projetos:', error);\r\n        setLoading(false);  // Se houver erro, também define o loading como false\r\n      });\r\n  }, []);  // O array vazio indica que a função será chamada apenas uma vez quando o componente for montado\r\n\r\n  if (loading) {\r\n    return <div>Carregando projetos...</div>;  // Exibe \"Carregando...\" enquanto os dados não chegam\r\n  }\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"projects container\">\r\n      <h2 className=\"neon-title\">Projetos</h2>\r\n      <div className=\"projects-list\">\r\n        {projects.map(project => (\r\n          <div key={project.id} className=\"project-card\">\r\n            <h3>{project.title}</h3>\r\n            <p>{project.description}</p>\r\n            <a href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">Ver Projeto</a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;IAAA,CACnCF,IAAI,CAACG,IAAI,IAAI;MACZP,WAAW,CAACO,IAAI,CAAC,CAAC,CAAE;MACpBL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EAC7C;EAEA,oBACEnB,OAAA;IAASoB,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,oBAAoB;IAAAN,QAAA,gBACnDf,OAAA;MAAIqB,SAAS,EAAC,YAAY;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCnB,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAN,QAAA,EAC3BZ,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBACnBvB,OAAA;QAAsBqB,SAAS,EAAC,cAAc;QAAAN,QAAA,gBAC5Cf,OAAA;UAAAe,QAAA,EAAKQ,OAAO,CAACC;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBnB,OAAA;UAAAe,QAAA,EAAIQ,OAAO,CAACE;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BnB,OAAA;UAAG0B,IAAI,EAAEH,OAAO,CAACI,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAd,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAHvEI,OAAO,CAACH,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAAjB,EAAA,CAtCKD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}