{"ast":null,"code":"var _jsxFileName = \"C:\\\\Meu_Portifolio\\\\Portifolio_Front_end\\\\src\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]); // Estado para armazenar os projetos\n  const [loading, setLoading] = useState(true); // Estado para controle de carregamento\n  const [error, setError] = useState(null); // Estado para armazenar erros\n\n  // Função para buscar os dados da API\n  useEffect(() => {\n    fetch('https://sua-api-url.com/projetos') // Substitua pela URL da sua API\n    .then(response => response.json()) // Converte a resposta para JSON\n    .then(data => {\n      setProjects(data); // Armazena os projetos no estado\n      setLoading(false); // Atualiza o estado de carregamento\n    }).catch(error => {\n      setError(error); // Caso haja erro, armazena no estado\n      setLoading(false); // Para o carregamento\n    });\n  }, []); // O array vazio significa que o efeito só será executado uma vez, quando o componente for montado.\n\n  // Caso esteja carregando ou haja erro\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando projetos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erro ao carregar projetos: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    className: \"projects container\",\n    children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"D01YWZOqXtPgB8Jf7trLNzFYnAg=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","loading","setLoading","error","setError","fetch","then","response","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","id","className","map","project","name","description","_c","$RefreshReg$"],"sources":["C:/Meu_Portifolio/Portifolio_Front_end/src/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ProjectList() {\r\n  const [projects, setProjects] = useState([]);  // Estado para armazenar os projetos\r\n  const [loading, setLoading] = useState(true);   // Estado para controle de carregamento\r\n  const [error, setError] = useState(null);       // Estado para armazenar erros\r\n\r\n  // Função para buscar os dados da API\r\n  useEffect(() => {\r\n    fetch('https://sua-api-url.com/projetos')  // Substitua pela URL da sua API\r\n      .then((response) => response.json())     // Converte a resposta para JSON\r\n      .then((data) => {\r\n        setProjects(data);   // Armazena os projetos no estado\r\n        setLoading(false);    // Atualiza o estado de carregamento\r\n      })\r\n      .catch((error) => {\r\n        setError(error);      // Caso haja erro, armazena no estado\r\n        setLoading(false);    // Para o carregamento\r\n      });\r\n  }, []);  // O array vazio significa que o efeito só será executado uma vez, quando o componente for montado.\r\n\r\n  // Caso esteja carregando ou haja erro\r\n  if (loading) return <p>Carregando projetos...</p>;\r\n  if (error) return <p>Erro ao carregar projetos: {error.message}</p>;\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"projects container\">\r\n      {projects.map((project) => (\r\n        <div className=\"project-card\" key={project.id}>\r\n          <h3>{project.name}</h3>  {/* Substitua com a propriedade correta do seu projeto */}\r\n          <p>{project.description}</p>  {/* Substitua com a propriedade correta do seu projeto */}\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAO;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,kCAAkC,CAAC,CAAE;IAAA,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAK;IAAA,CACxCF,IAAI,CAAEG,IAAI,IAAK;MACdT,WAAW,CAACS,IAAI,CAAC,CAAC,CAAG;MACrBP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAI;IACxB,CAAC,CAAC,CACDQ,KAAK,CAAEP,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAM;MACtBD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAI;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET;EACA,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAe,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACjD,IAAIZ,KAAK,EAAE,oBAAOP,OAAA;IAAAe,QAAA,GAAG,6BAA2B,EAACR,KAAK,CAACa,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEnE,oBACEnB,OAAA;IAASqB,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,oBAAoB;IAAAP,QAAA,EAClDZ,QAAQ,CAACoB,GAAG,CAAEC,OAAO,iBACpBxB,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAP,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,EAAKS,OAAO,CAACC;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,MAAE,eACzBnB,OAAA;QAAAe,QAAA,EAAIS,OAAO,CAACE;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MAAE;IAAA,GAFGK,OAAO,CAACH,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACjB,EAAA,CAjCQD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}